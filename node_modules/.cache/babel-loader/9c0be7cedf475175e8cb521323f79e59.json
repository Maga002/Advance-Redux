{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = items.find(item => item.id === newItem.id);\n    },\n\n    removeItemFromCart(state, action) {}\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initialState","items","totalQuantity","cartSlice","name","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","removeItemFromCart","cartActions","actions"],"sources":["C:/Users/Mehemmed/Desktop/react-course/Projects/advance-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    items:[],\r\n    totalQuantity:0,\r\n}\r\n\r\nconst cartSlice = createSlice({\r\n    name:'cart',\r\n    initialState,\r\n    reducers:{\r\n        addItemToCart(state,action){\r\n            const newItem = action.payload\r\n            const existingItem = items.find(item=> item.id === newItem.id)\r\n        },\r\n        removeItemFromCart(state,action){\r\n\r\n        }\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport default cartSlice"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC,EADW;EAEjBC,aAAa,EAAC;AAFG,CAArB;AAKA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAC,MADqB;EAE1BJ,YAF0B;EAG1BK,QAAQ,EAAC;IACLC,aAAa,CAACC,KAAD,EAAOC,MAAP,EAAc;MACvB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACA,MAAMC,YAAY,GAAGV,KAAK,CAACW,IAAN,CAAWC,IAAI,IAAGA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAAtC,CAArB;IACH,CAJI;;IAKLC,kBAAkB,CAACR,KAAD,EAAOC,MAAP,EAAc,CAE/B;;EAPI;AAHiB,CAAD,CAA7B;AAaA,OAAO,MAAMQ,WAAW,GAAGb,SAAS,CAACc,OAA9B;AACP,eAAed,SAAf"},"metadata":{},"sourceType":"module"}